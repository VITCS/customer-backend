################################################
# Template for Tables - OrderNotification
################################################

AWSTemplateFormatVersion: "2010-09-09"
Transform: "AWS::Serverless-2016-10-31"

################################################
# Parameters
################################################
Parameters:
  Application:
    Type: String
  Module:
    Type: String
  Environment:
    Type: String
    Default: dev
    Description: Environment name
  LogLevel:
    Type: String
    Default: INFO
  RetentionInDays:
    Type: Number
    Default: 30
    Description: CloudWatch Logs retention period for Lambda functions
  NodeLayerArn:
    Type: AWS::SSM::Parameter::Value<String>
    Description: Node Layer NodeDependenciesLayer ARN
  EventBusName:
    Type: AWS::SSM::Parameter::Value<String>
    Description: Event Bus Name
  RejectionEventBus:
    Type: AWS::SSM::Parameter::Value<String>
    Description: Event Bus Name

Globals:
  Function:
    Runtime: nodejs16.x
    Handler: index.handler
    Layers:
      - !Ref NodeLayerArn
    Timeout: 5
    Tracing: Active
    Environment:
      Variables:
        ENVIRONMENT: !Ref Environment
        LOG_LEVEL: !Ref LogLevel

################################################
# Resources
################################################
Resources:
  ################################################
  # Functions
  ################################################
  ManageOrderNotification:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${Application}-${Environment}-ManageOrderNotification-Function
      Handler: manage_OrderNotification.handler
      CodeUri: ./src
      MemorySize: 768
      Tags:
        Application: !Ref Application
        Environment: !Ref Environment
        Module: !Ref Module
      Environment:
        Variables:
          Application: !Ref Application
          MERCHANT_USER_STORE_TABLE: !Sub ${Application}-${Environment}-MerchantUserStore
          DEVICE_TOKEN: !Sub ${Application}-${Environment}-DeviceToken
          CUSTOMER_PROFILE_TABLE: !Sub ${Application}-${Environment}-CustomerProfile
          LOG_LEVEL: !Ref LogLevel

      Policies:
        - arn:aws:iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - lambda:InvokeFunction
                - dynamodb:Query
                - dynamodb:Scan
                - dynamodb:GetItem
                - ssm:GetParameter

              Resource:
                - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${Application}-${Environment}-ManageOrderNotification-Function"
                - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:table:${Application}-${Environment}-MerchantUserStore/index/byStore"
                - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:table:${Application}-${Environment}-DeviceToken/index/byUserId"
                - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:table:${Application}-${Environment}-CustomerProfile"
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Application}/fcm/fcm_key"

                "arn:aws:lambda:us-east-1:843219620739:function:spirits-sit-ManageOrderNotification-Function",
                "arn:aws:dynamodb:us-east-1:843219620739:table/spirits-sit-MerchantUserStore/index/byStore",
                "arn:aws:dynamodb:us-east-1:843219620739:table/spirits-sit-DeviceToken/index/byUserId",
                "arn:aws:dynamodb:us-east-1:843219620739:table/spirits-sit-CustomerProfile",
                "arn:aws:ssm:us-east-1:843219620739:parameter/spirits/fcm/fcm_key"
                
  ManageOrderNotificationLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${ManageOrderNotification}"
      RetentionInDays: !Ref RetentionInDays

  ################################################
  # Event Bus Lambda Rule
  ################################################
  OrderNotificationEventRule:
    Type: AWS::Events::Rule
    Properties:
      EventBusName: !Ref EventBusName
      EventPattern:
        source:
          - !Sub ${Application}-${Environment}-ManageOrderNotification-Function
        detail-type:
          - Order-Create
      Targets:
        - Id: order-create-notification
          Arn: !GetAtt ManageOrderNotification.Arn

  RejectionNotificationEventRule:
    Type: AWS::Events::Rule
    Properties:
      EventBusName: !Ref RejectionEventBus
      EventPattern:
        source:
          - !Sub ${Application}-${Environment}-ManageOrderNotification-Function
        detail-type:
          - Rejection-Notification
      Targets:
        - Id: rejection-notification
          Arn: !GetAtt ManageOrderNotification.Arn
